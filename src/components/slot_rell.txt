import { useState, useEffect, useRef } from 'react';

function SlotRell() {
  // ဂိမ်းအခြေအနေ (Game State)
  const [walletBalance, setWalletBalance] = useState(1000); // ကနဦး လက်ကျန်ငွေ
  const [betAmount, setBetAmount] = useState(10);
  const [selectedDigit, setSelectedDigit] = useState(null); // ကစားသမား ရွေးချယ်သော ဂဏန်း
  const [resultDigit, setResultDigit] = useState(null); // နောက်ဆုံး ပေါ်လာသော ဂဏန်း
  const [isSpinning, setIsSpinning] = useState(false); // လှည့်နေသော Animation နှင့် Loading ကို ထိန်းချုပ်သည်
  const [message, setMessage] = useState(''); // အနိုင်/အရှုံး/အမှား မက်ဆေ့ချ်များ

  // Animation အခြေအနေ (Animation State)
  const [spinAnimationDigit, setSpinAnimationDigit] = useState(null);
  const spinIntervalRef = useRef(null); // Interval ID ကို သိမ်းဆည်းရန် Ref

  // Payout ကိန်းသေများ (Backend သို့မဟုတ် Config သို့ ရွှေ့နိုင်သည်)
  const PAYOUT_EXACT_DIGIT = 5; // bet_amount * 5 (ဂဏန်း ၅ မှလွဲ၍)
  const PAYOUT_DIGIT_5 = 10;    // bet_amount * 10 (ဂဏန်း ၅ အတွက်)

  // လှည့်ခြင်းလုပ်ငန်းစဉ်ကို ကိုင်တွယ်သော Function
  const handleSpin = async () => {
    // အခြေခံ စစ်ဆေးမှုများ
    if (selectedDigit === null) {
      setMessage('လောင်းရန် ဂဏန်းတစ်ခုကို ရွေးချယ်ပေးပါ!');
      return;
    }
    if (betAmount <= 0) {
      setMessage('လောင်းကြေးပမာဏသည် သုညထက် ကြီးရမည်!');
      return;
    }
    if (betAmount > walletBalance) {
      setMessage('လက်ကျန်ငွေ မလုံလောက်ပါ! လောင်းကြေးလျှော့ချပေးပါ.');
      return;
    }

    // မက်ဆေ့ချ်များနှင့် ရလဒ်များကို ပြန်လည်သတ်မှတ်သည်
    setMessage('');
    setResultDigit(null);
    setIsSpinning(true);
    setSpinAnimationDigit(null);

    // လှည့်သော Animation ကို စတင်သည်
    let animationCount = 0;
    spinIntervalRef.current = setInterval(() => {
      setSpinAnimationDigit(Math.floor(Math.random() * 10)); // ကျပန်းဂဏန်းများ လှည့်နေစေသည်
      animationCount++;
    }, 100); // ဂဏန်းတိုင်းကို 100ms တစ်ခါ ပြောင်းလဲသည်

    // Animation စတင်ပြီးနောက် Backend API ခေါ်ဆိုမှုကို အတုယူသည် (တိုတောင်းသော နှောင့်နှေးမှုဖြင့်)
    setTimeout(async () => {
      clearInterval(spinIntervalRef.current); // လှည့်ခြင်းကို ရပ်သည်
      setIsSpinning(false); // လှည့်သော Animation UI ကို ရပ်သည်

      try {
        // Backend API ခေါ်ဆိုမှုကို အတုယူသည်
        const apiResponse = await simulateBackendSpin(selectedDigit, betAmount);

        if (apiResponse.success) {
          setResultDigit(apiResponse.data.rolledNumber);
          setWalletBalance(apiResponse.data.newBalance);
          setMessage(apiResponse.message);
        } else {
          setMessage(apiResponse.message);
          setWalletBalance(apiResponse.data?.newBalance || walletBalance); // Backend အမှားရှိလျှင်ပင် လက်ကျန်ငွေကို ပြန်လည်သတ်မှတ်သည်
        }
      } catch (error) {
        console.error('Spin လုပ်ဆောင်နေစဉ် Frontend အမှား:', error);
        setMessage('လှည့်နေစဉ် အမှားတစ်ခု ဖြစ်ပေါ်ခဲ့သည်။ ကျေးဇူးပြု၍ ထပ်မံကြိုးစားပါ။');
      } finally {
        setSpinAnimationDigit(null); // Animation ပြီးဆုံးပါက ဂဏန်းကို ဖျက်သည်
      }
    }, 2500); // 2.5 စက္ကန့်ကြာ လှည့်သည် (100ms interval ဖြင့် 25 ကြိမ် ပြောင်းလဲသည်)
  };

  // Backend API ခေါ်ဆိုမှုကို အတုယူသော Function
  const simulateBackendSpin = async (betDigit, currentBetAmount) => {
    // လက်တွေ့ Application တွင် ၎င်းကို သင်၏ Laravel API သို့ ပေးပို့ရမည်:
    // const response = await fetch('/api/spin', { method: 'POST', body: JSON.stringify({ betDigit, betAmount: currentBetAmount }) });
    // const data = await response.json();
    // return data;

    // Network နှောင့်နှေးမှုကို အတုယူသည်
    await new Promise(resolve => setTimeout(resolve, 500)); // Network အတွက် 0.5 စက္ကန့် ထပ်ဆောင်းသည်

    const rolledNumber = Math.floor(Math.random() * 10);
    let winStatus;
    let winAmount = 0;

    // အနိုင်/အရှုံးကို ဆုံးဖြတ်ပြီး အနိုင်ရငွေကို တွက်ချက်သည်
    if (betDigit === rolledNumber) {
      winStatus = 'win';
      // သီးခြား Payout စည်းမျဉ်းများ
      if (rolledNumber === 5) {
        winAmount = currentBetAmount * PAYOUT_DIGIT_5;
      } else {
        winAmount = currentBetAmount * PAYOUT_EXACT_DIGIT;
      }
    } else {
      winStatus = 'lose';
      winAmount = 0; // ရှုံးလျှင် အနိုင်ရငွေ မရှိပါ
    }

    const newBalance = winStatus === 'win'
      ? walletBalance - currentBetAmount + winAmount
      : walletBalance - currentBetAmount;

    return {
      success: true,
      message: winStatus === 'win' ?
        `သင်နိုင်ပါသည်! ဂဏန်းမှာ ${rolledNumber} ဖြစ်ပါသည်! သင် ${winAmount} အနိုင်ရရှိခဲ့ပါသည်!` :
        `သင်ရှုံးပါသည်! ဂဏန်းမှာ ${rolledNumber} ဖြစ်ပါသည်.`,
      data: {
        rolledNumber,
        winStatus,
        winAmount,
        newBalance
      }
    };
  };

  // Component မဖျက်မီ Interval ကို ရှင်းလင်းသည်
  useEffect(() => {
    return () => {
      if (spinIntervalRef.current) {
        clearInterval(spinIntervalRef.current);
      }
    };
  }, []);

  return (
    <div className="p-8 rounded-2xl w-full text-center"> {/* အပို Style ဖယ်ရှားပြီး Central Alignment ကို ထိန်းထားသည် */}
      <h1 className="text-4xl font-bold text-teal-400 mb-6 drop-shadow-lg">
        🎰 One-Digit Slot
      </h1>

      {/* Wallet Balance */}
      <div className="mb-6 p-4 bg-gray-700 rounded-xl shadow-inner border border-gray-600">
        <p className="text-xl text-gray-300 mb-1">သင်၏ လက်ကျန်ငွေ</p>
        <p className="text-4xl font-extrabold text-white">
          ${walletBalance.toFixed(2)}
        </p>
      </div>

      {/* Digit Spinner Display */}
      <div className="mb-8 p-6 bg-gray-900 rounded-xl shadow-2xl flex items-center justify-center h-40 border border-gray-600 relative overflow-hidden">
        {isSpinning ? (
          <div className="text-8xl font-extrabold text-yellow-400 animate-pulse transition-transform duration-75 ease-in-out">
            {spinAnimationDigit !== null ? spinAnimationDigit : '?'}
          </div>
        ) : (
          <div className="text-8xl font-extrabold text-green-400 animate-fade-in">
            {resultDigit !== null ? resultDigit : '?'}
          </div>
        )}
        {/* Visual Effect အတွက် Simple Overlay */}
        <div className="absolute inset-0 bg-gradient-to-t from-transparent via-gray-900/50 to-transparent pointer-events-none"></div>
      </div>

      {/* Bet Amount Input */}
      <div className="mb-6">
        <label htmlFor="bet-amount" className="block text-gray-300 text-lg font-semibold mb-2">
          လောင်းကြေးပမာဏ:
        </label>
        <input
          id="bet-amount"
          type="number"
          min="1"
          value={betAmount}
          onChange={(e) => setBetAmount(Math.max(1, parseInt(e.target.value) || 0))}
          className="w-full p-3 rounded-lg bg-gray-700 text-white border border-gray-600 focus:ring-2 focus:ring-teal-500 focus:border-transparent text-xl text-center"
          disabled={isSpinning}
        />
      </div>

      {/* Digit Selection Buttons */}
      <div className="mb-8">
        <h2 className="text-xl font-semibold text-gray-300 mb-3">သင်၏ ကံကောင်းသော ဂဏန်းကို ရွေးချယ်ပါ</h2>
        <div className="grid grid-cols-5 gap-3">
          {[0, 1, 2, 3, 4, 5, 6, 7, 8, 9].map((digit) => (
            <button
              key={digit}
              onClick={() => setSelectedDigit(digit)}
              className={`
                p-4 rounded-lg font-bold text-xl transition-all duration-200 shadow-md
                ${selectedDigit === digit
                  ? 'bg-teal-600 text-white ring-4 ring-teal-300 scale-105'
                  : 'bg-gray-700 text-gray-200 hover:bg-teal-500 hover:text-white border border-gray-600'
                }
                ${isSpinning ? 'opacity-50 cursor-not-allowed' : ''}
              `}
              disabled={isSpinning}
            >
              {digit}
            </button>
          ))}
        </div>
      </div>

      {/* Spin Button */}
      <button
        onClick={handleSpin}
        className="w-full bg-gradient-to-r from-teal-500 to-blue-600 hover:from-teal-600 hover:to-blue-700 text-white py-4 rounded-xl text-2xl font-bold transition-all duration-300 shadow-lg flex items-center justify-center gap-3
                   transform hover:-translate-y-1 active:translate-y-0 active:scale-98 focus:outline-none focus:ring-4 focus:ring-teal-400"
        disabled={isSpinning || selectedDigit === null || betAmount <= 0}
      >
        {isSpinning ? (
          <>
            <svg className="animate-spin h-6 w-6 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
              <circle className="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" strokeWidth="4"></circle>
              <path className="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
            </svg>
            လှည့်နေသည်...
          </>
        ) : (
          'Slot ကို လှည့်မည်!'
        )}
      </button>

      {/* Messages Display */}
      {message && (
        <p className={`mt-6 text-lg font-semibold p-4 rounded-xl shadow-md animate-fade-in
          ${message.includes('WON') ? 'bg-green-700 text-green-100 border border-green-600' :
            message.includes('LOST') ? 'bg-red-700 text-red-100 border border-red-600' :
            'bg-blue-700 text-blue-100 border border-blue-600'}
        `}>
          {message}
        </p>
      )}

      {/* Current Bet Status */}
      <div className="mt-8 text-sm text-gray-400">
        <p className="mb-2">
          <strong>လက်ရှိ လောင်းကြေး:</strong> {selectedDigit !== null ? `ဂဏန်း ${selectedDigit}` : 'မရှိသေးပါ'}
        </p>
        <p>
          သင်၏ လောင်းကြေးပမာဏကို ထည့်ပြီး ဂဏန်း (0-9) တစ်ခုကို ရွေးချယ်ပါ၊ ထို့နောက် "Slot ကို လှည့်မည်!" ကို နှိပ်ပါ။
        </p>
      </div>
    </div>
  );
}

export default SlotRell;